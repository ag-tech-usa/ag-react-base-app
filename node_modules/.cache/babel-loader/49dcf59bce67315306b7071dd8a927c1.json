{"ast":null,"code":"var _jsxFileName = \"/Users/subugovindh/ag-tech-usa/ag-react-base-app/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nconst Content = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    margin: 10,\n    fontSize: 12\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 1\n  }\n}, \" \", children, \" \");\n\nContent.propType = {\n  children: PropTypes.node\n};\nconst views = [/*#__PURE__*/React.createElement(Content, {\n  key: \"view1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, \"Home\")];\nconst menuListWidth = {\n  touch: 150,\n  low: 150,\n  medium: 120,\n  high: 100\n};\nconst actionsWidth = {\n  touch: 250,\n  low: 250,\n  medium: 235,\n  high: 205\n};\n\nconst AppNav = () => {\n  const density = useDensity();\n  const [viewIndex, setViewIndex] = useState(0);\n\n  const handleNavItemClick = (payload, event) => {\n    setViewIndex(payload.index);\n    console.log('navigation', 'onItemClick', payload, {\n      event\n    });\n  };\n\n  const navigationProps = {\n    currentIndex: viewIndex,\n    onItemClick: handleNavItemClick,\n    menuPops: {\n      listProps: {\n        width: menuListWidth[density]\n      }\n    }\n  };\n  const navigationSource = [{\n    itemId: 'Home',\n    Label: 'Home'\n  }];\n  const actionProps = {\n    iconSize: 17,\n    maxWidth: actionsWidth[density],\n    onItemClick: handleActionItemClick\n  };\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, \"Test Content\");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/subugovindh/ag-tech-usa/ag-react-base-app/src/App.js"],"names":["React","PropTypes","Content","children","margin","fontSize","propType","node","views","menuListWidth","touch","low","medium","high","actionsWidth","AppNav","density","useDensity","viewIndex","setViewIndex","useState","handleNavItemClick","payload","event","index","console","log","navigationProps","currentIndex","onItemClick","menuPops","listProps","width","navigationSource","itemId","Label","actionProps","iconSize","maxWidth","handleActionItemClick","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAChB;AAAK,EAAA,KAAK,EAAE;AAAEC,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA6CF,QAA7C,MADA;;AAIAD,OAAO,CAACI,QAAR,GAAmB;AACjBH,EAAAA,QAAQ,EAAEF,SAAS,CAACM;AADH,CAAnB;AAIA,MAAMC,KAAK,GAAG,cACZ,oBAAC,OAAD;AAAS,EAAA,GAAG,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADY,CAAd;AAIA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,GADa;AAEpBC,EAAAA,GAAG,EAAE,GAFe;AAGpBC,EAAAA,MAAM,EAAE,GAHY;AAIpBC,EAAAA,IAAI,EAAE;AAJc,CAAtB;AAOA,MAAMC,YAAY,GAAG;AAEnBJ,EAAAA,KAAK,EAAE,GAFY;AAGnBC,EAAAA,GAAG,EAAE,GAHc;AAInBC,EAAAA,MAAM,EAAE,GAJW;AAKnBC,EAAAA,IAAI,EAAE;AALa,CAArB;;AAQA,MAAME,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGC,UAAU,EAA1B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,CAAD,CAA1C;;AACA,QAAMC,kBAAkB,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC7CJ,IAAAA,YAAY,CAACG,OAAO,CAACE,KAAT,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,aAA1B,EAAyCJ,OAAzC,EAAkD;AAAEC,MAAAA;AAAF,KAAlD;AACD,GAHD;;AAKA,QAAMI,eAAe,GAAG;AACtBC,IAAAA,YAAY,EAAEV,SADQ;AAEtBW,IAAAA,WAAW,EAAER,kBAFS;AAGtBS,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAEvB,aAAa,CAACO,OAAD;AADX;AADH;AAHY,GAAxB;AAUA,QAAMiB,gBAAgB,GAAG,CACvB;AAAEC,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GADuB,CAAzB;AAIA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,QAAQ,EAAE,EADQ;AAElBC,IAAAA,QAAQ,EAAExB,YAAY,CAACE,OAAD,CAFJ;AAGlBa,IAAAA,WAAW,EAAEU;AAHK,GAApB;AAKD,CA3BD;;AA8BA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nconst Content = ({ children }) =>(\n<div style={{ margin: 10, fontSize: 12 }} > {children} </div>\n);\n\nContent.propType = {\n  children: PropTypes.node\n};\n\nconst views = [\n  <Content key=\"view1\">Home</Content>\n]\n\nconst menuListWidth = {\n  touch: 150,\n  low: 150,\n  medium: 120,\n  high: 100\n};\n\nconst actionsWidth = {\n\n  touch: 250,\n  low: 250,\n  medium: 235,\n  high: 205\n};\n\nconst AppNav = () => {\n  const density = useDensity();\n  const [viewIndex, setViewIndex] = useState(0);\n  const handleNavItemClick = (payload, event) => {\n    setViewIndex(payload.index);\n    console.log('navigation', 'onItemClick', payload, { event});\n  };\n\n  const navigationProps = {\n    currentIndex: viewIndex,\n    onItemClick: handleNavItemClick,\n    menuPops: {\n      listProps: {\n        width: menuListWidth[density]\n      }\n    }\n  };\n\n  const navigationSource = [\n    { itemId: 'Home', Label: 'Home'}\n  ];\n\n  const actionProps = {\n    iconSize: 17,\n    maxWidth: actionsWidth[density],\n    onItemClick: handleActionItemClick\n  }\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      Test Content\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}